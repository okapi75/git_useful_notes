Основные моменты при создании локльного репозитория:

notepad 'filename.*' - создать/изменить файл в текущей директории
git init - инициализация пустого репозитория
git status - показывает состояние репозитория (что актуально, что поменялось итд)
git add - добавление файла, изменения в котором нужно отслеживать
git commit -m 'MyComment' - коммит изменений ("слепок" нужного нам состояния)

****
Добавление репозитория на сервер (подключение к удаленному репозиторию)
1. Сначала нужно создать репозиторий на github
2. Связываем наш локальный репозиторий с удаленным
	git remote add origin https://github.com/mypage/repository_name.git (здесь origin - название репозитория (сокращенное, чтобы каждый раз не набирать полный адрес))
3. Пересылка локального коммита на сервер
	git push origin master (на репозиторий origin пересылаем данные с ветки master)

****
Запрос изменений с удаленного сервера:
git pull origin master - скачивать изменения с удаленного сервера (репозитория origin) на локальный, в ветку master

****
Ветвление
git branch 'new_branch_name' - создание новой ветки, точной копии master. При этом основная ветка остается неизменной
git branch - показывает все имеющиеся у нас ветки
git checkout 'new_branch_name' - переключение на новую ветку
git merge 'new_branch_name' - слияния новой ветки с основной (могут быть конфликты, с ними надо разобраться отдельно)
git branch -d 'new_branch_name' - удаление ветки

****
Отслеживание изменений, сделанных в коммитах
git log - показывает список всех коммитов с их идентификаторами и комментариями к ним, показывает, кто какой сделал коммит, дату
git show 'commit_id' - показывает информацию о коммите commit_id
git diff 'commit_1'..'commit_2' - показывает разницу между двумя коммитами (не обязательно целиком вводить их id)
git checkout 'commit_id' 'filename' - откат файла 'filename' до состояния коммита 'commit_id' (короче, вместо ctrl+z*N)
